# This playbook is the primary entrypoint for the productctl-based multi-target
# certification workflow.
---
- name: Certify Helm charts
  hosts: helm_chart_components
  # We don't really need discovered facts, given we're not using traditional
  # "remote hosts"
  gather_facts: false
  environment:
    # Respect proxy configuration throughout the playbook and role execution.
    http_proxy: "{{ lookup('ansible.builtin.env', 'http_proxy') | default('') }}"
    HTTP_PROXY: "{{ lookup('ansible.builtin.env', 'HTTP_PROXY') | default('') }}"
    https_proxy: "{{ lookup('ansible.builtin.env', 'https_proxy') | default('') }}"
    HTTPS_PROXY: "{{ lookup('ansible.builtin.env', 'HTTPS_PROXY') | default('') }}"
  tasks:
    - name: Execute Helm chart certification
      ansible.builtin.include_role:
        name: certify_helmcharts
      vars:
        # Set the working directory to the expected base directory of
        # ansible-runner in our image.
        certify_helmcharts_working_dir: "/runner"
        certify_helmcharts_chart_uri: "{{ hostvars[inventory_hostname]['chart_uri'] }}"
        certify_helmcharts_vendor_type: "{{ hostvars[inventory_hostname]['tool_flags']['vendor_type'] | default(None) }}"
        certify_helmcharts_profile_version: "{{ hostvars[inventory_hostname]['tool_flags']['profile_version'] | default(None) }}"
        certify_helmcharts_kubeconfig: "{{ hostvars[inventory_hostname]['kubeconfig'] }}"
        certify_helmcharts_with_set_items: "{{ hostvars[inventory_hostname]['tool_flags']['with_set_items'] | default([]) }}"
...
