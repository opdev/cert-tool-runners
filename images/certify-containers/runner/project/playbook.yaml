# This playbook is the primary entrypoint for the productctl-based multi-target
# certification workflow.
---
- name: Certify containers
  hosts: container_components
  # We don't really need discovered facts, given we're not using traditional
  # "remote hosts"
  gather_facts: false
  environment:
    # Respect proxy configuration throughout the playbook and role execution.
    http_proxy: "{{ lookup('ansible.builtin.env', 'http_proxy') | default('') }}"
    HTTP_PROXY: "{{ lookup('ansible.builtin.env', 'HTTP_PROXY') | default('') }}"
    https_proxy: "{{ lookup('ansible.builtin.env', 'https_proxy') | default('') }}"
    HTTPS_PROXY: "{{ lookup('ansible.builtin.env', 'HTTPS_PROXY') | default('') }}"
  tasks:
    - name: Execute container certification
      ansible.builtin.include_role:
        name: certify_containers
      vars:
        # Set the working directory to the expected base directory of
        # ansible-runner in our image.
        certify_containers_working_dir: "/runner"
        # Each "host" should correspond with an image target to run certification
        # against.
        certify_containers_target_image: "{{ hostvars[inventory_hostname]['image'] }}"
        certify_containers_pyxis_api_token: "{{ lookup('ansible.builtin.env', 'PFLT_PYXIS_API_TOKEN') }}"
        # Set the optional inputs based on the crafted inventory.
        certify_containers_submit_results: "{{ hostvars[inventory_hostname]['tool_flags']['submit'] | default(false) | bool }}"
        certify_containers_pyxis_env: "{{ hostvars[inventory_hostname]['tool_flags']['pyxis_env'] | default(None) }}"
        certify_containers_docker_config_filename: "{{ hostvars[inventory_hostname]['tool_flags']['docker_config'] | default(None) }}"
        certify_containers_component_id: "{{ hostvars[inventory_hostname]['component']['_id'] | default(None) }}"
        certify_containers_image_platform: "{{ hostvars[inventory_hostname]['tool_flags']['platform'] | default(None) }}"
        certify_containers_preflight_loglevel: "{{ hostvars[inventory_hostname]['tool_flags']['loglevel'] | default(None) }}"
...
